@model IEnumerable<Inventory.Model.ProductDetail>

@{
    ViewBag.Title = "Product Entry";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}

<h2>Product Entry</h2>
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="text-success">
                @if (ViewData["Message"] != null && ViewData["Message"].ToString() != "")
                {
                    @ViewData["Message"];
                }
            </div>
        </div>

        <div class="container">
            <div class="bg-success" id="message">
            </div>
        </div>
        <br />
        <div class="form-horizontal" role="form">
            <div class="container">
                <div class="row">

                    <div class="form-group">
                        @Html.Label("Product Category", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProductCategoryID", (IEnumerable<SelectListItem>)ViewBag.ProudctCategory, "Select", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBox("ProductName", "", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Cost Price", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBox("CostPrice", "", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Selling Price", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBox("SellingPrice", "", new { @class = "form-control" })
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" id="Save" />
                        <input type="submit" value="Clear" class="btn btn-danger" id="Clear" style="margin-left:20px;" />
                    </div>
                </div>
                <div style="display:none">
                    @Html.TextBox("Flag", "false")
                    @Html.TextBox("ProductDetailID")
                </div>
            </div>
        </div>

    </div>

}

<!-- Loader start-->
<div class="loading" id="spinner" style="display:none">
    <div class="loader"></div>
</div>
<!-- loader end -->
<div class="container">
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover" id="searchresult">
            <thead style="color:blueviolet;">
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.ProductCategoryID)*@
                        Product Category
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CostPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SellingPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreatedBy)
                    </th>
                    <th>
                        Created On
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ModifiedBy)
                    </th>
                    <th>
                        Modified On
                    </th>
                    <th> </th>
                </tr>
            </thead>

            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.ProductCategoryID)*@
                            @Html.DisplayFor(modelItem => item.ProductCategory.ProductCategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CostPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SellingPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedOn)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModifiedBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModifiedOn)
                        </td>
                        <td>
                            <a href="@item.ProductDetailID" id="Edit" name="Edit" class="btn btn-primary editProduct">Edit</a>
                            <a href="@item.ProductDetailID" id="Delete" name="Delete" class="btn btn-danger deleteProduct">Delete</a>
                        </td>
                    </tr>
                }
            }

        </table>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Save').click(function (e) {
                e.preventDefault();

                var productCategoryID = $('#ProductCategoryID').val();
                var productName = $('#ProductName').val();
                var costPrice = $('#CostPrice').val();
                var sellingPrice = $('#SellingPrice').val();
                var productDetailID = $('#ProductDetailID').val();
                var flag = $('#Flag').val();

                if (productCategoryID == "") {
                    alert("Please select product category");
                    $('#ProductCategoryID').focus();
                    return;
                }
                else if (productName == "") {
                    alert("Please enter product name");
                    $('#ProductName').focus();
                    return;
                }
                else if (costPrice == "") {
                    alert("Please enter product cost price");
                    $('#CostPrice').focus();
                    return;
                }
                else if (costPrice != "" && !$.isNumeric(costPrice)) {
                    alert("Cost Price must be numeric");
                    $('#CostPrice').focus();
                    return;
                }
                else if (sellingPrice == "") {
                    alert("Please enter product selling price");
                    $('#SellingPrice').focus();
                    return;
                }
                else if (sellingPrice != "" && !$.isNumeric(sellingPrice)) {
                    alert("Selling Price must be numeric");
                    $('#SellingPrice').focus();
                    return;
                }


                var type = "POST" //add
                var url = '../../api/ProductDetail/AddProduct'; //add
                var confirmMessage = "Are you sure you want to add this product";

                if (flag == "U") { //update
                    type = "PATCH";
                    url = "../../api/ProductDetail/UpdateProduct"
                    confirmMessage = "Are you sure you want to update this product";
                }

                var con = confirm(confirmMessage);
                if (con) {

                    var productDetail = {};
                    productDetail.ProductCategoryID = productCategoryID;
                    productDetail.ProductName = productName;
                    productDetail.CostPrice = costPrice;
                    productDetail.SellingPrice = sellingPrice;
                    productDetail.ProductDetailID = Number(productDetailID);
                    productDetail.Flag = flag;

                    $.ajax({
                        url: url,
                        cache: false,
                        type: type,
                        contentType: 'application/json',
                        data: JSON.stringify(productDetail),
                        success: successFunc,
                        error: errorFunc
                    });
                }

                function successFunc(response) {
                    console.log(response);
                    alert(response);
                    location.reload();
                }

                function errorFunc(error) {
                    //alert("Error occured");//To avoid alerting if no internet connection.
                    console.log(error);
                }
            })

            $('#Clear').click(function (e) {
                e.preventDefault();
                $('#ProductCategoryID').val('');
                $('#ProductName').val('');
                $('#CostPrice').val('');
                $('#SellingPrice').val('');
                $('#Save').val("Save");
            })

            $('.deleteProduct').click(function (e) {
                var id = $(this).attr('id');
                if (id == 'Delete') {
                    e.preventDefault();
                    e.stopPropagation();
                    var ProductDetailID = $(this).attr("href");
                }
                var r = confirm("Are you sure you want to delete product");
                if (r) {
                    $.ajax({
                        url: '../../api/ProductDetail/DeleteProduct',
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json',
                        data: {
                            ProductDetailID: ProductDetailID
                        },
                        success: successFunc,
                        error: errorFunc
                    });

                    function successFunc(response) {
                        console.log(response);
                        location.reload();
                    }

                    function errorFunc(error) {
                        //alert("Error occured");//To avoid alerting if no internet connection.
                        console.log(error);
                    }
                }
            })

            $('.editProduct').click(function (e) {
                var id = $(this).attr('id');
                if (id == 'Edit') {
                    e.preventDefault();
                    e.stopPropagation();
                    var productDetailID = $(this).attr("href");
                }
                $.ajax({
                    url: '../../api/ProductDetail/GetProductById',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json',
                    data: {
                        id: Number(productDetailID)
                    },
                    success: successFunc,
                    error: errorFunc
                });

                function successFunc(response) {
                    console.log(response);
                    $('#ProductCategoryID').val(response.ProductCategoryID);
                    $('#ProductName').val(response.ProductName);
                    $('#CostPrice').val(response.CostPrice);
                    $('#SellingPrice').val(response.SellingPrice);
                    $('#Flag').val("U");
                    $('#Save').val("Update");
                    $('#ProductDetailID').val(response.ProductDetailID);
                }

                function errorFunc(error) {
                    console.log(error);
                }
            })

            $(document).ajaxStart(function () {
                $("#spinner").css("display", "block");
            });

            $(document).ajaxComplete(function () {
                $("#spinner").css("display", "none");
            });
        })

    </script>
}